Field_Name,Field_Value_or_Group_Info,Subfield_Name,Subfield_Value,Subsubfield_Name,Subsubfield_Value
site_js,,,
site_js,,variables,
site_js,,functions,
site_js,,document_ready,
site_js,,window_load,
theme_js,,,
theme_js,,dependencies,,0,gsap
theme_js,,dependencies,,1,scrollMagic
theme_js,,variables,"var windowScrollResizeID;"
theme_js,,functions,"// Make sure main doesn't slip under header
function tspAddTopMarginToMain(){
	if( jQuery(window).outerWidth() > 991 ){
		var headingHeight = jQuery(""header#site-header"").outerHeight();
		jQuery(""main#site-main"").css(""border-top-width"", headingHeight);
	}else{
		jQuery(""main#site-main"").css(""border-top-width"", 0);
	}
}

function tspToggleHeaderScrolled(){
	tspAddTopMarginToMain();
	if( jQuery(document).scrollTop() > 50 && jQuery(window).outerWidth() > 575 ){ /* Does not matter if ""scrolled"" class is added or removed before desktop menu implemented - the CSS is only active when the desktop menu is active */ 
		jQuery('header#site-header').addClass(""scrolled"");			
	} else {
		jQuery('header#site-header').removeClass(""scrolled"");			
	}
}"
theme_js,,document_ready,"/*
// ACF JS API - see https://www.advancedcustomfields.com/resources/javascript-api/#acf.condition-choices
        
if ( typeof acf !== 'undefined' ) {
	console.log( 'ACF is defined', acf );
*/

// Confirm JS loaded
$('#js-loaded').text(""true""); // This will prevent ""No JS"" file from being loaded in footer.php (which is a fallback in case JS doesn't execute)


// Animations
let heading1 = document.querySelector('.kokako h1');
let heading2s = document.querySelectorAll('.kokako h2');
let textAndImageImages = document.querySelectorAll('.kokako.textAndImage .image');
let columns = document.querySelectorAll('.kokako.columns .col');
let rows = document.querySelectorAll('.kokako.rows .col');
let posts = document.querySelectorAll('.kokako.posts .col.blog-grid');

/* heading2s.forEach(
	(item) => ( item.style.animationDelay = (Math.random() * 0.5) + 's' )
); */

function inViewPort(el) {
	if ( el ) {
		let rect = el.getBoundingClientRect();
		if ( rect ) {
			return (
				(rect.top <= 0 && rect.bottom >= 0) ||
				(rect.bottom >= window.innerHeight && rect.top <= window.innerHeight) ||
				(rect.top >= 0 && rect.bottom <= window.innerHeight)
			);
		} else {
			return false;
		}
	} else {
		return false;
	}
}

function animateOnScroll() {

	let animationDelayInitial = 0.2;
	let animationDelayIncrease = 0.2;
	let parentSection = """";
	let previousParentSection = """";

	// Heading 1
	if ( inViewPort(heading1) ) {
		heading1.classList.add('appear');
	}

	// Heading 2s
	if ( 0 == jQuery('.woocommerce').length ) { // Don't fade in h2's on Woocommerce pages
		let animationDelay = animationDelayInitial; // Will add animationDelayInitial (in seconds) in case h1 and first h2 are in view together
		heading2s.forEach(function(heading2) {
			if ( inViewPort(heading2) ) {
				if ( performance.now() < 4000) { // If page has recently loaded, add a variation, so that headings in view don't display all at the same time
					heading2.style.animationDelay = animationDelay + 's'; // Animation delay doesn't need to be removed, as this code is only executing when a heading is in view within 4 seconds of the page loading, and the animation is never being re-triggered
					animationDelay += animationDelayIncrease;
				}			
				if ( !heading2. classList.contains('hide') ) {
					heading2.classList.add('appear');
				}
			}
		});
	}

	// Text And Image - images
	animationDelay = animationDelayInitial; // Will add 300ms in case h1 and first h2 are in view together, to match headings
	textAndImageImages.forEach(function(taiImage) {
		if ( inViewPort(taiImage) ) {
			if ( performance.now() < 4000) { // If page has recently loaded, add a variation, so that headings in view don't display all at the same time
				taiImage.style.animationDelay = animationDelay + 's'; // Animation delay doesn't need to be removed, as this code is only executing when a heading is in view with 4 seconds of the page loading, and the animation is never being re-triggered
				animationDelay += animationDelayIncrease;
			}			
			taiImage.classList.add('appear');
		}
	});

	// Columns columns
	animationDelay = animationDelayInitial;
	parentSection = """";
	previousParentSection = """";
	columns.forEach(function(columnsCol) {
		if ( inViewPort(columnsCol) ) {
			if ( jQuery(window).outerWidth() > 767 ) {
				parentSection = jQuery(columnsCol).parent().parent().parent(""section"").attr(""class"");
				if ( ( """" == previousParentSection) || ( parentSection == previousParentSection ) ) {
					columnsCol.style.animationDelay = animationDelay + 's'; // Animation delay doesn't need to be removed, as this code is only executing when a heading is in view with 4 seconds of the page loading, and the animation is never being re-triggered
					animationDelay += animationDelayIncrease;
				} else {
					animationDelay = animationDelayInitial;
					columnsCol.style.animationDelay = animationDelay + 's'; // Animation delay doesn't need to be removed, as this code is only executing when a heading is in view with 4 seconds of the page loading, and the animation is never being re-triggered
					animationDelay += animationDelayIncrease;
				}
				previousParentSection = parentSection;
			}
			columnsCol.classList.add('appear');
		}
	});

	// Rows rows
	animationDelay = animationDelayInitial;
	rows.forEach(function(rowsRow) {
		if ( inViewPort(rowsRow) ) {
			if ( jQuery(window).outerWidth() > 767 ) {
				rowsRow.style.animationDelay = animationDelay + 's'; // Animation delay doesn't need to be removed, as this code is only executing when a heading is in view with 4 seconds of the page loading, and the animation is never being re-triggered
				animationDelay += animationDelayIncrease;
			}
			rowsRow.classList.add('appear');
		}
	});

	// Posts columns
	animationDelay = animationDelayInitial;
	posts.forEach(function(postsPost) {
		if ( inViewPort(postsPost) ) {
			if ( jQuery(window).outerWidth() > 767 ) {
				postsPost.style.animationDelay = animationDelay + 's'; // Animation delay doesn't need to be removed, as this code is only executing when a heading is in view with 4 seconds of the page loading, and the animation is never being re-triggered
				animationDelay += animationDelayIncrease;
			}
			postsPost.classList.add('appear');
		}
	});

	window.requestAnimationFrame(animateOnScroll);
}
window.requestAnimationFrame(animateOnScroll);


// Custom Animations
/* let scrollMagicController = new ScrollMagic.Controller();

if ( jQuery('.kokako.textWithCircularPhoto').length ) {

	let textWithCircularPhotoMotifTween = TweenMax.from('.kokako.textWithCircularPhoto .background-motif', {
		x: 25, // 25
		y: 25, // 50
		ease: Sine.easeInOut, // See https://greensock.com/docs/v2/Easing
	});
	let textWithCircularPhotoImageTween = TweenMax.from('.kokako.textWithCircularPhoto .image', {
		x: -25, // -50
		y: -25,
		ease: Sine.easeInOut,
	});

	new ScrollMagic.Scene({
		triggerElement: '.kokako.textWithCircularPhoto',
		duration: ( jQuery(window).height() * 1.5),
		triggerHook: 0.5,
		offset: ( jQuery(window).height() / -2 ),
	})
		.setTween(textWithCircularPhotoMotifTween)
		.addTo(scrollMagicController);
		// .addIndicators(); // For debugging, see https://scrollmagic.io/docs/debug.addIndicators.html#Scene.addIndicators

	new ScrollMagic.Scene({
		triggerElement: '.kokako.textWithCircularPhoto',
		duration: ( jQuery(window).height() * 1.5),
		triggerHook: 0.5,
		offset: ( jQuery(window).height() / -2 ),
	})
		.setTween(textWithCircularPhotoImageTween)
		.addTo(scrollMagicController);
		// .addIndicators(); // For debugging, see https://scrollmagic.io/docs/debug.addIndicators.html#Scene.addIndicators
}

if ( jQuery('.kokako.contact-footer').length ) {

	let contactFooterMotifTween = TweenMax.from('.kokako.contact-footer .foreground-motif', {
		x: -25,
		y: 50,
		ease: Sine.easeInOut,
	});

	let contactFooterImageTween = TweenMax.from('.kokako.contact-footer img', {
		x: 0,
		y: -50,
		ease: Sine.easeInOut,
	});

	new ScrollMagic.Scene({
		triggerElement: '.kokako.contact-footer',
		duration: ( jQuery(window).height() * 1.5),
		triggerHook: 0.5,
		offset: ( jQuery(window).height() / -2 ),	
	})
		.setTween(contactFooterMotifTween)
		.addTo(scrollMagicController);

	new ScrollMagic.Scene({
		triggerElement: '.kokako.contact-footer',
		duration: ( jQuery(window).height() * 1.5),
		triggerHook: 0.5,
		offset: ( jQuery(window).height() / -2 ),
	})
		.setTween(contactFooterImageTween)
		.addTo(scrollMagicController);
} */


// Adjust fixed Header size on scroll

tspToggleHeaderScrolled();

$(window).scroll(function(){
	clearTimeout( windowScrollResizeID );
	windowScrollResizeID = setTimeout( tspToggleHeaderScrolled, 18); // Time optimised for UX and performance
});

$(window).on(""resize"", function() {
	clearTimeout( windowScrollResizeID );
	windowScrollResizeID = setTimeout( tspToggleHeaderScrolled, 100); // Time optimised for UX and performance
});"
theme_js,,window_load,"// Accordion functionality
jQuery('.accordion-toggle').click(function(){
	jQuery(this).find('i.icon-plus').toggleClass('open');	
	jQuery(this).next('div.accordion-content').slideToggle(400);	
});"
sections_js,,section_type,Team
sections_js,,javascript,,,
sections_js,,javascript,,variables,
sections_js,,javascript,,functions,"function tspTeamMemberOpenModal( el ) {
	jQuery(el).next("".team-member-modal"").addClass(""open"");
}"
sections_js,,javascript,,document_ready,"$(""button.close-modal"").on( ""click"", function(){
	$(this).parent().parent("".team-member-modal.open"").removeClass(""open"");	
});

// Close modal on click outside of modal content
if ( $("".team-member-modal"").length ) {
	$("".team-member-modal"").on( ""click"", function(event) {
		if ( ( $(event.target).attr(""class"") == ""team-member-modal open"" ) ) {
			$("".team-member-modal.open"").removeClass(""open"");	
		}
	});
}"
sections_js,,javascript,,window_load,"// Toggle overlay photo in Team section
if (jQuery('section.team').length) {
	jQuery('section.team img.hover').hover(function(){
		jQuery(this).toggleClass('hovered');
	})
}"
sections_js,,section_type,Testimonials
sections_js,,javascript,,,
sections_js,,javascript,,variables,"var testimonialTimer;"
sections_js,,javascript,,functions,"function setTestimonialTimer() {
	testimonialTimer = window.setInterval(function(){ 
		var childIndex = jQuery('section.testimonials p.testimonial-links a.current').attr(""href"").replace(/[^0-9]/g,'');
		childIndex++;
		if (jQuery('section.testimonials p.testimonial-links a.testimonial-link' + childIndex).length == 0) {
		  childIndex = 0;
		}
		jQuery('section.testimonials p.testimonial-links a.testimonial-link' + childIndex).trigger(""click"");
	}, 5000 ); 
}

function setTestimonialSectionHeight() { // NB: If more than one Testimonial section is used on the page, all will be set to the minimum height
	var maxHeight = 0;
	jQuery('section.testimonials div.testimonial').each(function(){
		if (jQuery(this).height() > maxHeight) {
			maxHeight = jQuery(this).height();
		}
	});
	maxHeight = Math.ceil(maxHeight) + 10;
	jQuery('section.testimonials .internalWrap').height(maxHeight);
}"
sections_js,,javascript,,document_ready,
sections_js,,javascript,,window_load,"// Testimonials animation
if (jQuery('section.testimonials').length) {

	// Set Testimonials Height
	setTestimonialSectionHeight();
	jQuery(window).resize(function(){
		setTestimonialSectionHeight();
	});

	// Set Testimonials Animation
	if ( jQuery('section.testimonials div.testimonial').length > 1 ) { // Don't start timer if only one testimonial

		jQuery('section.testimonials p.testimonial-links a').click(function(){
			if (!jQuery(this).hasClass(""current"")) {

				// Remove all ""current"" classes
				jQuery('section.testimonials div.testimonial').removeClass(""current"");
				jQuery('section.testimonials p.testimonial-links a').removeClass(""current"");

				// Add an appropriate ""current"" class
				var childIndex = jQuery(this).attr(""href"").replace(/[^0-9]/g,'');
				jQuery('section.testimonials div.testimonial' + childIndex).addClass(""current"");
				jQuery('section.testimonials p.testimonial-links a.testimonial-link' + childIndex).addClass(""current"");
		  	}
			return false;
		});

		// Set timer (and clear on hover)
		setTestimonialTimer();
		jQuery(""section.testimonials div.col-xs-12"").hover(function() {
			window.clearInterval(testimonialTimer);
		}, function() {
			setTestimonialTimer();
		});
		jQuery(""section.testimonials p.testimonial-links a"").hover(function() {
			window.clearInterval(testimonialTimer);
		});

	}
}"
